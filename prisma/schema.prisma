// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "linux-arm64-openssl-1.0.x"]
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}



model User {
    id            String    @id @default(cuid())
    name          String
    password      String
    assignedTasks Task[]    @relation("TaskAssignees")
    createdTasks  Task[]    @relation("TaskCreator")
    projects      Project[] @relation("ProjectMembers")
    ownedProjects Project[] @relation("ProjectOwner")
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
}

model Project {
    id          String   @id @default(uuid())
    name        String
    description String?
    tasks       Task[]
    members     User[]   @relation("ProjectMembers")
    owner       User     @relation("ProjectOwner", fields: [ownerId], references: [id])
    ownerId     String
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model Task {
    id          String       @id @default(uuid())
    title       String
    description String?
    status      TaskStatus   @default(TODO)
    priority    TaskPriority @default(MEDIUM)
    dueDate     DateTime?
    project     Project      @relation(fields: [projectId], references: [id])
    projectId   String
    assignees   User[]       @relation("TaskAssignees")
    createdBy   User         @relation("TaskCreator", fields: [createdById], references: [id])
    createdById String
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
}

enum TaskStatus {
    INPROGRESS
    TODO
    COMPLETED
}

enum TaskPriority {
    LOW
    MEDIUM
    HIGH
}
